"""
Telegram Notifier ‚Äî —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –∫–∞–Ω–∞–ª –∞–±–æ —á–∞—Ç.
–ü—ñ–¥—Ç—Ä–∏–º—É—î –∞–≤—Ç–æ–ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó —Ç–∞ –Ω–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –±–æ—Ç–∞.
"""

import os, requests, time

# --- –ü—ñ–¥—Ç—Ä–∏–º–∫–∞ —Ä—ñ–∑–Ω–∏—Ö –Ω–∞–∑–≤ –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞ ---
TELEGRAM_BOT_TOKEN = (
    os.getenv("TELEGRAM_BOT_TOKEN")
    or os.getenv("TOKEN_BOT")
    or os.getenv("–¢–û–ö–ï–ù_–ë–û–¢–ê")
    or ""
)
TELEGRAM_CHAT_ID = (
    os.getenv("TELEGRAM_CHAT_ID")
    or os.getenv("CHAT_ID")
    or os.getenv("–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä_–ß–∞—Ç—É")
    or ""
)

def send_message(text, parse_mode="HTML", silent=False):
    """
    –ù–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram.
    –Ø–∫—â–æ —Ç–æ–∫–µ–Ω –∞–±–æ ID –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ ‚Äî –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –∫–æ–Ω—Å–æ–ª—å.
    """
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        print("[TG –≤–∏–º–∫–Ω–µ–Ω–æ]", text)
        return
    try:
        payload = {
            "chat_id": TELEGRAM_CHAT_ID,
            "text": text,
            "parse_mode": parse_mode,
            "disable_notification": silent,
        }
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        r = requests.post(url, json=payload, timeout=10)
        if not r.ok:
            print("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ Telegram:", r.text)
    except Exception as e:
        print("‚ùå –í–∏–Ω—è—Ç–æ–∫ Telegram:", e)


def send_startup_message():
    """
    –ù–∞–¥—Å–∏–ª–∞—î —Å—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞.
    """
    start_time = time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime())
    send_message(
        f"üöÄ <b>SmartTraderBot –∑–∞–ø—É—â–µ–Ω–æ</b>\n‚è∞ UTC: {start_time}\n"
        f"‚úÖ Telegram –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ.",
        parse_mode="HTML",
        silent=True,
    )

