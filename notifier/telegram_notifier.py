"""
Telegram Notifier ‚Äî —É–Ω—ñ–≤–µ—Ä—Å–∞–ª—å–Ω–∏–π –≤—ñ–¥–ø—Ä–∞–≤–Ω–∏–∫ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω—å —É –∫–∞–Ω–∞–ª –∞–±–æ —á–∞—Ç.
–ü—ñ–¥—Ç—Ä–∏–º—É—î –∞–≤—Ç–æ–ø–µ—Ä–µ–≤—ñ—Ä–∫—É –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó, –æ–±—Ä–æ–±–∫—É –∫–æ–º–∞–Ω–¥ —ñ –Ω–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–∏ —Å—Ç–∞—Ä—Ç—ñ –±–æ—Ç–∞.
"""

import os
import requests
import time

# ============================================================
# ‚öôÔ∏è –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è
# ============================================================
TELEGRAM_BOT_TOKEN = (
    os.getenv("TELEGRAM_BOT_TOKEN")
    or os.getenv("TOKEN_BOT")
    or os.getenv("–¢–û–ö–ï–ù_–ë–û–¢–ê")
    or ""
)
TELEGRAM_CHAT_ID = (
    os.getenv("TELEGRAM_CHAT_ID")
    or os.getenv("CHAT_ID")
    or os.getenv("–Ü–¥–µ–Ω—Ç–∏—Ñ—ñ–∫–∞—Ç–æ—Ä_–ß–∞—Ç—É")
    or ""
)

# ============================================================
# üì§ –ù–∞–¥—Å–∏–ª–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
# ============================================================
def send_message(text: str, parse_mode: str = "HTML", silent: bool = False):
    """
    –ù–∞–¥—Å–∏–ª–∞—î –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram.
    –Ø–∫—â–æ —Ç–æ–∫–µ–Ω –∞–±–æ ID –Ω–µ –≤–∫–∞–∑–∞–Ω—ñ ‚Äî –≤–∏–≤–æ–¥–∏—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É –∫–æ–Ω—Å–æ–ª—å.
    """
    if not TELEGRAM_BOT_TOKEN or not TELEGRAM_CHAT_ID:
        print("[TG –≤–∏–º–∫–Ω–µ–Ω–æ]", text)
        return

    try:
        payload = {
            "chat_id": TELEGRAM_CHAT_ID,
            "text": text,
            "parse_mode": parse_mode,
            "disable_notification": silent,
        }
        url = f"https://api.telegram.org/bot{TELEGRAM_BOT_TOKEN}/sendMessage"
        r = requests.post(url, json=payload, timeout=10)
        if not r.ok:
            print("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ Telegram:", r.text)
        else:
            print(f"[TG] {text[:60]}{'...' if len(text) > 60 else ''}")
    except Exception as e:
        print("‚ùå –í–∏–Ω—è—Ç–æ–∫ Telegram:", e)

# ============================================================
# üöÄ –°—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
# ============================================================
def send_startup_message():
    """
    –ù–∞–¥—Å–∏–ª–∞—î —Å—Ç–∞—Ä—Ç–æ–≤–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —É Telegram –ø—ñ—Å–ª—è –∑–∞–ø—É—Å–∫—É –±–æ—Ç–∞.
    """
    start_time = time.strftime("%Y-%m-%d %H:%M:%S", time.gmtime())
    send_message(
        f"üöÄ <b>SmartTraderBot –∑–∞–ø—É—â–µ–Ω–æ</b>\n"
        f"‚è∞ UTC: {start_time}\n"
        f"‚úÖ Telegram –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∞–∫—Ç–∏–≤–Ω—ñ.",
        parse_mode="HTML",
        silent=True,
    )

# ============================================================
# üß† –û–±—Ä–æ–±–∫–∞ Telegram-–∫–æ–º–∞–Ω–¥ (/safe_on, /safe_off, /safe_status)
# ============================================================
def handle_command(command: str):
    """
    –û–±—Ä–æ–±–ª—è—î –∫–æ–º–∞–Ω–¥–∏ –∫–µ—Ä—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ—á–Ω–∏–º —Ä–µ–∂–∏–º–æ–º:
    /safe_on ‚Äî —É–≤—ñ–º–∫–Ω—É—Ç–∏ –±–µ–∑–ø–µ—á–Ω–∏–π —Ä–µ–∂–∏–º
    /safe_off ‚Äî –≤–∏–º–∫–Ω—É—Ç–∏ –±–µ–∑–ø–µ—á–Ω–∏–π —Ä–µ–∂–∏–º
    /safe_status ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ —Å—Ç–∞–Ω
    """
    try:
        from core.trading_events import set_safe_mode, is_safe_mode

        cmd = command.lower().strip()
        if cmd == "/safe_on":
            set_safe_mode(True)
        elif cmd == "/safe_off":
            set_safe_mode(False)
        elif cmd == "/safe_status":
            state = "üü¢ –£–≤—ñ–º–∫–Ω–µ–Ω–æ" if is_safe_mode() else "üî¥ –í–∏–º–∫–Ω–µ–Ω–æ"
            send_message(f"üõ°Ô∏è –ë–µ–∑–ø–µ—á–Ω–∏–π —Ä–µ–∂–∏–º: {state}")
        else:
            send_message("‚ùì –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞.\n–î–æ—Å—Ç—É–ø–Ω—ñ: /safe_on /safe_off /safe_status")

        print(f"[CMD] –û–±—Ä–æ–±–ª–µ–Ω–æ –∫–æ–º–∞–Ω–¥—É: {command}")

    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∫–æ–º–∞–Ω–¥–∏ '{command}': {e}")
        send_message(f"‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤–∏–∫–æ–Ω–∞–Ω–Ω—ñ –∫–æ–º–∞–Ω–¥–∏: {e}")

# ============================================================
# üí° –ü—Ä–∏–∫–ª–∞–¥ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è (—É —Å–∏–º—É–ª—è—Ü—ñ—ó –∞–±–æ —Ä–µ–∞–ª—å–Ω—ñ–π —Ç–æ—Ä–≥—ñ–≤–ª—ñ)
# ============================================================
"""
from core.trading_events import notify_open_position, notify_close_position, is_safe_mode

if not is_safe_mode():
    notify_open_position("BTCUSDT", "LONG", 68200, leverage=50)
    # ... –≤–∏–∫–æ–Ω–∞—Ç–∏ —Ç—Ä–µ–π–¥
    profit = 12.3
    notify_close_position("BTCUSDT", profit)
else:
    send_message("üõ°Ô∏è –ë–µ–∑–ø–µ—á–Ω–∏–π —Ä–µ–∂–∏–º —É–≤—ñ–º–∫–Ω–µ–Ω–æ ‚Äî –≤—ñ–¥–∫—Ä–∏—Ç—Ç—è –ø–æ–∑–∏—Ü—ñ–π –∑–∞–±–ª–æ–∫–æ–≤–∞–Ω–æ.")
"""

