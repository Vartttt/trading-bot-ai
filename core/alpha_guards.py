# core/alpha_guards.py
"""
Alpha Guards ‚Äî –∫–æ–Ω—Ç—Ä–æ–ª—é—î —Ç–æ—Ä–≥–æ–≤—ñ —Å–µ—Å—ñ—ó, –Ω–æ–≤–∏–Ω–Ω—ñ –≤—ñ–∫–Ω–∞ —Ç–∞ funding rate.
–ë–ª–æ–∫—É—î —Ç–æ—Ä–≥—ñ–≤–ª—é, —è–∫—â–æ:
  - –ø–æ–∑–∞ –¥–æ–∑–≤–æ–ª–µ–Ω–∏–º —Ç–æ—Ä–≥–æ–≤–∏–º —á–∞—Å–æ–º;
  - –∞–∫—Ç–∏–≤–Ω–µ –≤—ñ–∫–Ω–æ –Ω–æ–≤–∏–Ω;
  - funding rate –∑–∞–Ω–∞–¥—Ç–æ –≤–∏—Å–æ–∫–∏–π.
"""

import os, datetime
from notifier.telegram_notifier import send_message

TRADING_SESSION_UTC = os.getenv("TRADING_SESSION_UTC", "7-22")      # UTC –≥–æ–¥–∏–Ω–∏ –¥–æ–∑–≤–æ–ª–µ–Ω–æ—ó —Å–µ—Å—ñ—ó
NEWS_WINDOWS_UTC = os.getenv("NEWS_WINDOWS_UTC", "").strip()        # "12:25-13:15,18:55-19:20"
MAX_FUNDING_ABS = float(os.getenv("MAX_FUNDING_ABS", "0.003"))      # funding rate –æ–±–º–µ–∂–µ–Ω–Ω—è (0.3%)

def _now_utc():
    """–ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —É UTC."""
    return datetime.datetime.utcnow()

def session_guard():
    """
    –î–æ–∑–≤–æ–ª—è—î —Ç–æ—Ä–≥—ñ–≤–ª—é –ª–∏—à–µ —É –≤–∫–∞–∑–∞–Ω–∏–π UTC-–¥—ñ–∞–ø–∞–∑–æ–Ω –≥–æ–¥–∏–Ω.
    """
    try:
        start, end = TRADING_SESSION_UTC.split("-")
        h = _now_utc().hour
        ok = int(start) <= h <= int(end)
        if not ok:
            send_message(f"üïí Session guard: outside trading window ({TRADING_SESSION_UTC} UTC).")
        return ok
    except Exception:
        return True

def _parse_windows(s):
    out = []
    if not s:
        return out
    parts = [p.strip() for p in s.split(",") if p.strip()]
    for p in parts:
        if "-" in p:
            a, b = p.split("-")
            out.append((a.strip(), b.strip()))
    return out

def news_guard():
    """
    –ë–ª–æ–∫—É—î —Ç–æ—Ä–≥—ñ–≤–ª—é –ø—ñ–¥ —á–∞—Å –∑–∞–ø–ª–∞–Ω–æ–≤–∞–Ω–∏—Ö ‚Äú–≤—ñ–∫–æ–Ω –Ω–æ–≤–∏–Ω‚Äù.
    """
    windows = _parse_windows(NEWS_WINDOWS_UTC)
    if not windows:
        return True
    now = _now_utc().strftime("%H:%M")
    for a, b in windows:
        if a <= now <= b:
            send_message(f"üì∞ News guard active ({a}-{b} UTC). Trading paused.")
            return False
    return True

def funding_guard(ex, symbol):
    """
    –ë–ª–æ–∫—É—î —Ç–æ—Ä–≥—ñ–≤–ª—é, —è–∫—â–æ funding rate –∑–∞–Ω–∞–¥—Ç–æ –≤–∏—Å–æ–∫–∏–π.
    """
    try:
        t = ex.fetch_ticker(symbol)
        rate = float(t.get("fundingRate") or 0.0)
        if abs(rate) > MAX_FUNDING_ABS:
            send_message(f"üí∏ Funding guard: {symbol} rate={rate:.4f} exceeds limit.")
            return False
    except Exception:
        pass
    return True
